{"ast":null,"code":"import _slicedToArray from\"C:/Users/2209l/Desktop/picker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"C:/Users/2209l/Desktop/picker/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"C:/Users/2209l/Desktop/picker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\2209l\\\\Desktop\\\\picker\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import HeroesStore from'../store/HeroesStore';import{configMain}from'../configs/configMain';function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});}var HeroesMatchups=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var res,ansArr,_iterator,_step,matchup;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(configMain.serverUrl,\"/api/heroes/\").concat(id,\"/matchups\"),{method:\"GET\"}).then(function(ans){return ans.json();}).then(function(ans){return ans;});case 2:res=_context.sent;ansArr={};_iterator=_createForOfIteratorHelper(res);try{for(_iterator.s();!(_step=_iterator.n()).done;){matchup=_step.value;if(matchup.games_played<10){ansArr[matchup.hero_id]=100/(matchup.games_played+10-matchup.games_played)*(matchup.wins+10-matchup.games_played)/2;}else{ansArr[matchup.hero_id]=100/matchup.games_played*matchup.wins;}}// await sleep(1000)\n}catch(err){_iterator.e(err);}finally{_iterator.f();}return _context.abrupt(\"return\",ansArr);case 7:case\"end\":return _context.stop();}}},_callee);}));return function HeroesMatchups(_x){return _ref.apply(this,arguments);};}();var InitHeroesData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,ansArr,_iterator2,_step2,_step2$value,index,hero;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(configMain.serverUrl,\"/api/heroStats\"),{method:\"GET\"}).then(function(ans){return ans.json();}).then(function(ans){return ans;});case 2:res=_context2.sent;if(res){ansArr={};_iterator2=_createForOfIteratorHelper(res.entries());try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){_step2$value=_slicedToArray(_step2.value,2),index=_step2$value[0],hero=_step2$value[1];// let matchups = await HeroesMatchups(hero.id)\nansArr[hero.id]={id:hero.id,localized_name:hero.localized_name,roles:hero.roles,img:hero.img// matchups:matchups\n};}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}HeroesStore.SetHeroes(ansArr);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function InitHeroesData(){return _ref2.apply(this,arguments);};}();setInterval(function(){if(HeroesStore.heroes.length===0){InitHeroesData();}},1000);export{InitHeroesData,HeroesMatchups};","map":{"version":3,"sources":["C:/Users/2209l/Desktop/picker/src/controllers/HeroesController.js"],"names":["HeroesStore","configMain","sleep","ms","Promise","resolve","setTimeout","HeroesMatchups","id","fetch","serverUrl","method","then","ans","json","res","ansArr","matchup","games_played","hero_id","wins","InitHeroesData","entries","index","hero","localized_name","roles","img","SetHeroes","setInterval","heroes","length"],"mappings":"gfAAA,MAAOA,CAAAA,WAAP,KAAwB,sBAAxB,CACA,OAASC,UAAT,KAA2B,uBAA3B,CAEA,QAASC,CAAAA,KAAT,CAAeC,EAAf,CAAmB,CACf,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,QAAIC,CAAAA,UAAU,CAACD,OAAD,CAAUF,EAAV,CAAd,EAAnB,CAAP,CACH,CAED,GAAMI,CAAAA,cAAc,0FAAG,iBAAOC,EAAP,+KACHC,CAAAA,KAAK,WAAIR,UAAU,CAACS,SAAf,wBAAuCF,EAAvC,cACjB,CACIG,MAAM,CAAE,KADZ,CADiB,CAAL,CAKXC,IALW,CAKN,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EALM,EAMXF,IANW,CAMN,SAACC,GAAD,CAAS,CAAE,MAAOA,CAAAA,GAAP,CAAY,CANjB,CADG,QACfE,GADe,eAQfC,MARe,CAQN,EARM,sCASCD,GATD,MASnB,+CAAyB,CAAhBE,OAAgB,aACrB,GAAIA,OAAO,CAACC,YAAR,CAAuB,EAA3B,CAA+B,CAC3BF,MAAM,CAACC,OAAO,CAACE,OAAT,CAAN,CAA0B,KAAOF,OAAO,CAACC,YAAR,CAAuB,EAAvB,CAA4BD,OAAO,CAACC,YAA3C,GAA4DD,OAAO,CAACG,IAAR,CAAe,EAAf,CAAoBH,OAAO,CAACC,YAAxF,EAAuG,CAAjI,CACH,CAFD,IAEO,CACHF,MAAM,CAACC,OAAO,CAACE,OAAT,CAAN,CAA0B,IAAMF,OAAO,CAACC,YAAd,CAA6BD,OAAO,CAACG,IAA/D,CACH,CAEJ,CAED;AAlBmB,qFAmBZJ,MAnBY,wDAAH,kBAAdT,CAAAA,cAAc,4CAApB,CAsBA,GAAMc,CAAAA,cAAc,2FAAG,wNACHZ,CAAAA,KAAK,WAAIR,UAAU,CAACS,SAAf,mBACjB,CACIC,MAAM,CAAE,KADZ,CADiB,CAAL,CAKXC,IALW,CAKN,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EALM,EAMXF,IANW,CAMN,SAACC,GAAD,CAAS,CACX,MAAOA,CAAAA,GAAP,CACH,CARW,CADG,QACfE,GADe,gBAWnB,GAAIA,GAAJ,CAAS,CACLC,MAAM,CAAG,EAAT,CADK,sCAEqBD,GAAG,CAACO,OAAJ,EAFrB,MAEL,kDAAyC,6CAA/BC,KAA+B,iBAAxBC,IAAwB,iBACrC;AACAR,MAAM,CAACQ,IAAI,CAAChB,EAAN,CAAN,CAAkB,CACdA,EAAE,CAAEgB,IAAI,CAAChB,EADK,CAEdiB,cAAc,CAAED,IAAI,CAACC,cAFP,CAGdC,KAAK,CAAEF,IAAI,CAACE,KAHE,CAIdC,GAAG,CAAEH,IAAI,CAACG,GACV;AALc,CAAlB,CAOH,CAXI,uDAYR,CACD3B,WAAW,CAAC4B,SAAZ,CAAsBZ,MAAtB,EAxBmB,wDAAH,kBAAdK,CAAAA,cAAc,2CAApB,CA2BAQ,WAAW,CAAC,UAAM,CAAE,GAAI7B,WAAW,CAAC8B,MAAZ,CAAmBC,MAAnB,GAA8B,CAAlC,CAAqC,CAAEV,cAAc,GAAI,CAAE,CAApE,CAAsE,IAAtE,CAAX,CAEA,OACIA,cADJ,CAEId,cAFJ","sourcesContent":["import HeroesStore from '../store/HeroesStore'\r\nimport { configMain } from '../configs/configMain'\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst HeroesMatchups = async (id) => {\r\n    let res = await fetch(`${configMain.serverUrl}/api/heroes/${id}/matchups`,\r\n        {\r\n            method: \"GET\"\r\n        }\r\n    )\r\n        .then((ans) => ans.json())\r\n        .then((ans) => { return ans })\r\n    let ansArr = {}\r\n    for (let matchup of res) {\r\n        if (matchup.games_played < 10) {\r\n            ansArr[matchup.hero_id] = 100 / (matchup.games_played + 10 - matchup.games_played) * (matchup.wins + 10 - matchup.games_played) /2\r\n        } else {\r\n            ansArr[matchup.hero_id] = 100 / matchup.games_played * matchup.wins\r\n        }\r\n\r\n    }\r\n\r\n    // await sleep(1000)\r\n    return ansArr\r\n}\r\n\r\nconst InitHeroesData = async () => {\r\n    let res = await fetch(`${configMain.serverUrl}/api/heroStats`,\r\n        {\r\n            method: \"GET\"\r\n        }\r\n    )\r\n        .then((ans) => ans.json())\r\n        .then((ans) => {\r\n            return ans\r\n        })\r\n    let ansArr\r\n    if (res) {\r\n        ansArr = {}\r\n        for (let [index, hero] of res.entries()) {\r\n            // let matchups = await HeroesMatchups(hero.id)\r\n            ansArr[hero.id] = {\r\n                id: hero.id,\r\n                localized_name: hero.localized_name,\r\n                roles: hero.roles,\r\n                img: hero.img,\r\n                // matchups:matchups\r\n            }\r\n        }\r\n    }\r\n    HeroesStore.SetHeroes(ansArr)\r\n}\r\n\r\nsetInterval(() => { if (HeroesStore.heroes.length === 0) { InitHeroesData() } }, 1000)\r\n\r\nexport {\r\n    InitHeroesData,\r\n    HeroesMatchups\r\n}\r\n"]},"metadata":{},"sourceType":"module"}