[{"C:\\Users\\2209l\\Desktop\\picker\\src\\index.js":"1","C:\\Users\\2209l\\Desktop\\picker\\src\\App.js":"2","C:\\Users\\2209l\\Desktop\\picker\\src\\reportWebVitals.js":"3","C:\\Users\\2209l\\Desktop\\picker\\src\\components\\Header.js":"4","C:\\Users\\2209l\\Desktop\\picker\\src\\controllers\\HeroesController.js":"5","C:\\Users\\2209l\\Desktop\\picker\\src\\components\\WorkSpace.js":"6","C:\\Users\\2209l\\Desktop\\picker\\src\\components\\Heroes.js":"7","C:\\Users\\2209l\\Desktop\\picker\\src\\configs\\configMain.js":"8","C:\\Users\\2209l\\Desktop\\picker\\src\\store\\HeroesStore.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":837,"mtime":1645556949901,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3311,"mtime":1645566877663,"results":"14","hashOfConfig":"11"},{"size":1718,"mtime":1645467268221,"results":"15","hashOfConfig":"11"},{"size":8504,"mtime":1645558539431,"results":"16","hashOfConfig":"11"},{"size":3211,"mtime":1645558695056,"results":"17","hashOfConfig":"11"},{"size":72,"mtime":1645384079590,"results":"18","hashOfConfig":"11"},{"size":863,"mtime":1645513352227,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sxgsfw",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51"},"C:\\Users\\2209l\\Desktop\\picker\\src\\index.js",[],[],"C:\\Users\\2209l\\Desktop\\picker\\src\\App.js",["52"],[],"import React from \"react\";\nimport Header from \"./components/Header\";\nimport Heroes from \"./components/Heroes\";\nimport WorkSpace from \"./components/WorkSpace\";\nimport {InitHeroesData} from './controllers/HeroesController'\n\nfunction App() {\n  const [windowSize, setWindowSize] = React.useState({ height: window.innerHeight-1, width: window.innerWidth })\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", () => { setWindowSize({ height: window.innerHeight-1, width: window.innerWidth }) })\n  }, [])\n\n  return (\n    <div className=\"App\" style={{height:windowSize.height,width:windowSize.width,background:\"url(./assets/1-1.jpg)\"}}>\n      <Header />\n      <article style={{height:\"calc(100% - 50px)\",display:\"flex\",width:\"100%\"}}>\n        <Heroes />\n        <WorkSpace/>\n      </article>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\2209l\\Desktop\\picker\\src\\reportWebVitals.js",[],[],"C:\\Users\\2209l\\Desktop\\picker\\src\\components\\Header.js",["53"],[],"import \"./components.css\"\r\nimport HeroesStore from '../store/HeroesStore'\r\nimport { observer } from \"mobx-react-lite\"\r\nimport helpIcon from '../assets/help.svg'\r\nimport React from \"react\"\r\n\r\nconst Header = observer(() => {\r\n    const [isHover, setIshover] = React.useState(false)\r\n    return (\r\n        <article className=\"header\">\r\n            <section style={{ marginLeft: \"10px\" }}>Dota Counter Picker</section>\r\n            {HeroesStore.isLoading ? <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div> : <div />}\r\n            <section style={{height:\"20px\",width:\"20px\"}} onMouseLeave={() => { setIshover(false) }} onMouseOver={() => { setIshover(true) }}>\r\n                <img src={helpIcon} style={{ margin: \"auto 20px\" }} height=\"20\" width=\"20\" />\r\n                <span style={{ position: \"absolute\", display: isHover ? \"inherit\" : \"none\", background: \"#000000\", fontSize: \"14px\", width: \"80%\",padding:\"10px\" }}>\r\n                    Как я должен использовать этот инструмент?\r\n                    Вы должны просмотреть лучшие предложения и решить для себя, какой герой, по вашему мнению, работает лучше.\r\n                    Вы должны выбрать роль, которая нужна вашей команде, и подумать о линии, на которую вы пойдете.\r\n                    Сборщик может помочь вам выйти за пределы вашей зоны комфорта, выбирая героев, которых вы обычно не рассматриваете, но определенно рекомендуется иметь дополнительные знания о выбранном герое.\r\n                    Даже если вы используете пикера, это не значит, что вы должны выбирать последним (вы можете оставить его для своего мида или керри, чтобы их не контрили).\r\n                    Попробуйте проанализировать, почему определенные герои лучше работают в определенных составах, даже если вы сделаете это после окончания игры. Это сделает вас лучшим игроком.\r\n                    Драфт и выбор — огромная часть Dota 2. Это приложение поможет вам при принятии решений, но вы должны руководствоваться собственным мнением.\r\n\r\n                    Как работает подбор?\r\n                    Предложения для пика рассчитаны статистически из миллионов игр.\r\n                    Приложение использует винрейты (процент побед). Это поможет подобрать оперативных героев в текущей мете и увеличит шансы на победу.\r\n                </span>\r\n            </section>\r\n\r\n        </article>\r\n    )\r\n})\r\n\r\nexport default Header","C:\\Users\\2209l\\Desktop\\picker\\src\\controllers\\HeroesController.js",["54","55"],[],"import HeroesStore from '../store/HeroesStore'\r\nimport { configMain } from '../configs/configMain'\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst HeroesMatchups = async (id) => {\r\n    let res = await fetch(`${configMain.serverUrl}/api/heroes/${id}/matchups`,\r\n        {\r\n            method: \"GET\"\r\n        }\r\n    )\r\n        .then((ans) => ans.json())\r\n        .then((ans) => { return ans })\r\n    let ansArr = {}\r\n    for (let matchup of res) {\r\n        if (matchup.games_played < 10) {\r\n            ansArr[matchup.hero_id] = 100 / (matchup.games_played + 10 - matchup.games_played) * (matchup.wins + 10 - matchup.games_played) /2\r\n        } else {\r\n            ansArr[matchup.hero_id] = 100 / matchup.games_played * matchup.wins\r\n        }\r\n\r\n    }\r\n\r\n    // await sleep(1000)\r\n    return ansArr\r\n}\r\n\r\nconst InitHeroesData = async () => {\r\n    let res = await fetch(`${configMain.serverUrl}/api/heroStats`,\r\n        {\r\n            method: \"GET\"\r\n        }\r\n    )\r\n        .then((ans) => ans.json())\r\n        .then((ans) => {\r\n            return ans\r\n        })\r\n    let ansArr\r\n    if (res) {\r\n        ansArr = {}\r\n        for (let [index, hero] of res.entries()) {\r\n            // let matchups = await HeroesMatchups(hero.id)\r\n            ansArr[hero.id] = {\r\n                id: hero.id,\r\n                localized_name: hero.localized_name,\r\n                roles: hero.roles,\r\n                img: hero.img,\r\n                // matchups:matchups\r\n            }\r\n        }\r\n    }\r\n    HeroesStore.SetHeroes(ansArr)\r\n}\r\n\r\nsetInterval(() => { if (HeroesStore.heroes.length === 0) { InitHeroesData() } }, 1000)\r\n\r\nexport {\r\n    InitHeroesData,\r\n    HeroesMatchups\r\n}\r\n","C:\\Users\\2209l\\Desktop\\picker\\src\\components\\WorkSpace.js",["56","57","58","59","60","61","62"],[],"import HeroesStore from '../store/HeroesStore'\r\nimport React from \"react\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { HeroesMatchups } from '../controllers/HeroesController'\r\nimport { configMain } from \"../configs/configMain\"\r\n\r\nconst imageSizes = { width: 145, height: 75 }\r\n\r\nconst WorkSpace = observer(() => {\r\n    const [counterSupportHeroes, setCounterSupportHeroes] = React.useState()\r\n    const [counterCarryHeroes, setCounterCarryHeroes] = React.useState()\r\n\r\n    const initCounterHeroes = () => {\r\n        let heroesIdArr = Object.keys(HeroesStore.heroes)\r\n        let carryCounters = []\r\n        let supportCounters = []\r\n        for (let i = 0; i < HeroesStore.enemyTeam.length; i++) {\r\n            for (let heroId of heroesIdArr) {\r\n                if (HeroesStore.enemyTeam.indexOf(heroId) === -1) {\r\n                    if (HeroesStore.heroes[heroId].roles.includes(\"Carry\")) {\r\n                        if (carryCounters[heroId]) {\r\n                            carryCounters[heroId].potential = (carryCounters[heroId].potential * (i + 1) + (100 - HeroesStore.matchups[HeroesStore.enemyTeam[i]]?.[heroId] - 50)) / (i + 1)\r\n                        } else {\r\n                            carryCounters[heroId] = { id: heroId, potential: 100 - HeroesStore.matchups[HeroesStore.enemyTeam[i]]?.[heroId] - 50 }\r\n                        }\r\n                    } else {\r\n                        if (supportCounters[heroId]) {\r\n                            supportCounters[heroId].potential = (supportCounters[heroId].potential * (i + 1) + (100 - HeroesStore.matchups[HeroesStore.enemyTeam[i]]?.[heroId] - 50)) / (i + 1)\r\n                        } else {\r\n                            supportCounters[heroId] = { id: heroId, potential: 100 - HeroesStore.matchups[HeroesStore.enemyTeam[i]]?.[heroId] - 50 }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        carryCounters.sort((a, b) => a?.potential > b?.potential ? -1 : 1)\r\n        supportCounters.sort((a, b) => a?.potential > b?.potential ? -1 : 1)\r\n\r\n        carryCounters.sort((a, b) => a?.potential > b?.potential ? -1 : 1)\r\n        supportCounters.sort((a, b) => a?.potential > b?.potential ? -1 : 1)\r\n\r\n        setCounterCarryHeroes(carryCounters)\r\n        setCounterSupportHeroes(supportCounters)\r\n    }\r\n    React.useEffect(initCounterHeroes, [HeroesStore.enemyTeam, HeroesStore.matchups])\r\n\r\n    return (\r\n        <article style={{ width: \"calc(100% - 300px)\", height: \"100%\", background: \"#060606\" }}>\r\n            <article style={{ display: \"flex\", height: \"150px\", width: \"1000px\", margin: \"auto\", alignItems: \"center\" ,justifyContent:\"flex-start\" }}>\r\n                {HeroesStore.enemyTeam.map((element, index) => {\r\n\r\n                    if (element.potential !== NaN) {\r\n                        return (\r\n                            <section\r\n                                style={{\r\n                                    height: \"75px\",\r\n                                    width: '145px',\r\n                                    margin: \"15px 10px\",\r\n                                    background: `url(${configMain.serverUrl}${HeroesStore.heroes[element]?.img})`,\r\n                                    backgroundSize: `${imageSizes.width + Math.random()}px ${imageSizes.height + Math.random()}px`,\r\n                                    cursor: \"pointer\",\r\n                                }}\r\n                                onClick={async (event) => {\r\n                                    if (HeroesStore.enemyTeam.includes(element)) {\r\n                                        let newEnemyTeam = [...HeroesStore.enemyTeam]\r\n                                        newEnemyTeam.splice(newEnemyTeam.indexOf(element), 1)\r\n                                        HeroesStore.SetEnemyTeam(newEnemyTeam)\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <span style={{ color: \"#ffffff\" }}>{HeroesStore.heroes[element].localized_name}</span>\r\n                            </section>\r\n                        )\r\n                    } else {\r\n                        return <></>\r\n                    }\r\n\r\n                })}\r\n            </article>\r\n            <hr/>\r\n            <section style={{ height: \"calc(100% - 200px)\", width: \"100%\", overflow: \"auto\", display: \"flex\", width: \"1000px\", padding: \"10px\", margin: \"auto\"}}>\r\n                <section style={{ height: \"100%\", width: \"50%\" }}>\r\n                    <section style={{color:\"#ffffff\",fontSize:\"20px\",marginLeft:\"130px\",marginBottom:\"20px\"}}>Carry:</section>\r\n                    {counterCarryHeroes?.map((element, index) => {\r\n                        if (element.potential || element.potential === 0) {\r\n                            return (\r\n                                <section\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        height: \"75px\",\r\n                                        width: \"300px\",\r\n                                        background: element.potential > 0 ?\r\n                                            `rgba(0,255,13,${element.potential / 100})`\r\n                                            :\r\n                                            `rgba(247,0,0,${element.potential / 100 * -1})`,\r\n                                        marginBottom: \"10px\"\r\n                                    }}>\r\n                                    <img src={`${configMain.serverUrl}${HeroesStore.heroes[element.id]?.img}`} height=\"75\" />\r\n                                    <section>\r\n                                        <section style={{ color: \"#ffffff\" }}>\r\n                                            {HeroesStore.heroes[element.id]?.localized_name}\r\n                                        </section>\r\n                                        <section style={{ color: \"#ffffff\" }}>\r\n                                            {element.potential > 0 ? \"+\" + Math.round(element.potential) : Math.round(element.potential)}\r\n                                        </section>\r\n                                    </section>\r\n                                </section>\r\n                            )\r\n                        } else {\r\n                            return <></>\r\n                        }\r\n                    })}\r\n                </section>\r\n                <section style={{ height: \"100%\", width: \"50%\" }}>\r\n                <section style={{color:\"#ffffff\",fontSize:\"20px\",marginLeft:\"130px\",marginBottom:\"20px\"}}>Support:</section>\r\n                    {counterSupportHeroes?.map((element, index) => {\r\n                        if (element.potential !== NaN) {\r\n                            return (\r\n                                <section\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        height: \"75px\",\r\n                                        width: \"300px\",\r\n                                        background: element.potential > 0 ?\r\n                                            `rgba(0,255,13,${element.potential / 100})`\r\n                                            :\r\n                                            `rgba(247,0,0,${element.potential / 100 * -1})`,\r\n                                        marginBottom: \"10px\"\r\n                                    }}>\r\n                                    <img src={`${configMain.serverUrl}${HeroesStore.heroes[element.id]?.img}`} height=\"75\" />\r\n                                    <section>\r\n                                        <section style={{ color: \"#ffffff\" }}>\r\n                                            {HeroesStore.heroes[element.id]?.localized_name}\r\n                                        </section>\r\n                                        <section style={{ color: \"#ffffff\" }}>\r\n                                            {element.potential > 0 ? \"+\" + Math.round(element.potential) : Math.round(element.potential)}\r\n                                        </section>\r\n                                    </section>\r\n                                </section>\r\n                            )\r\n                        } else {\r\n                            return <></>\r\n                        }\r\n                    })}\r\n                </section>\r\n            </section>\r\n        </article>\r\n    )\r\n})\r\n\r\nexport default WorkSpace","C:\\Users\\2209l\\Desktop\\picker\\src\\components\\Heroes.js",[],[],"C:\\Users\\2209l\\Desktop\\picker\\src\\configs\\configMain.js",[],[],"C:\\Users\\2209l\\Desktop\\picker\\src\\store\\HeroesStore.js",["63"],[],"import { observable, makeObservable, action } from \"mobx\";\r\n\r\nclass HeroesStore {\r\n\r\n    heroes = []\r\n\r\n    SetHeroes(props) {\r\n        this.heroes = props\r\n    }\r\n\r\n    enemyTeam = []\r\n\r\n    SetEnemyTeam = (props) => {\r\n        this.enemyTeam = props\r\n    }\r\n\r\n    matchups = {}\r\n\r\n    AddMatchUp = (key, value) => {\r\n        this.matchups[key] = value\r\n    }\r\n\r\n    isLoading = false\r\n\r\n    SetIsLoading = (props) => {\r\n        this.isLoading = props\r\n    }\r\n\r\n    constructor() {\r\n        makeObservable(this, {\r\n            heroes: observable,\r\n            SetHeroes: action,\r\n            enemyTeam: observable,\r\n            SetEnemyTeam: action,\r\n            matchups: observable,\r\n            AddMatchUp: action,\r\n            isLoading:observable,\r\n            SetIsLoading:action\r\n        })\r\n    }\r\n}\r\n\r\nconst Store = new HeroesStore\r\nexport default Store",{"ruleId":"64","severity":1,"message":"65","line":5,"column":9,"nodeType":"66","messageId":"67","endLine":5,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":14,"column":17,"nodeType":"70","endLine":14,"endColumn":94},{"ruleId":"64","severity":1,"message":"71","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":43,"column":19,"nodeType":"66","messageId":"67","endLine":43,"endColumn":24},{"ruleId":"64","severity":1,"message":"73","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":46,"column":40,"nodeType":"76","endLine":46,"endColumn":85,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":53,"column":25,"nodeType":"80","messageId":"81","endLine":53,"endColumn":50},{"ruleId":"82","severity":1,"message":"83","line":82,"column":111,"nodeType":"84","messageId":"85","endLine":82,"endColumn":116},{"ruleId":"68","severity":1,"message":"69","line":99,"column":37,"nodeType":"70","endLine":99,"endColumn":126},{"ruleId":"78","severity":1,"message":"79","line":118,"column":29,"nodeType":"80","messageId":"81","endLine":118,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":131,"column":37,"nodeType":"70","endLine":131,"endColumn":126},{"ruleId":"86","severity":1,"message":"87","line":43,"column":15,"nodeType":"88","messageId":"89","endLine":43,"endColumn":30,"fix":"90"},"no-unused-vars","'InitHeroesData' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sleep' is defined but never used.","'index' is assigned a value but never used.","'HeroesMatchups' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has unnecessary dependencies: 'HeroesStore.enemyTeam' and 'HeroesStore.matchups'. Either exclude them or remove the dependency array. Outer scope values like 'HeroesStore.enemyTeam' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["91"],"use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"92","text":"93"},{"desc":"94","fix":"95"},[841,841],"()","Update the dependencies array to be: []",{"range":"96","text":"97"},[2369,2414],"[]"]